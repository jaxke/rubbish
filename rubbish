#!/bin/env python

import sys
import rubbish_lib as rubbish
import os
from pdb import set_trace as st


def rubbish_put(files):
    if len(files) == 0:
        print("Usage: rubbish put [files]")
        return
    curr_dir = os.getcwd()
    ret = rubbish.rm(files, curr_dir)
    print(ret, "out of", len(files), "files moved to bin.")


def rubbis_list():
    files_in_bin = rubbish.bin_contents()
    if not files_in_bin:
        print("Bin is empty!")
        return
    for item in files_in_bin:
        print("{0}: {1} (DELETED AT {2})".format(item, files_in_bin[item]['filename'], files_in_bin[item]['timedate']))


def rubbish_restore(files):
    if len(files) == 0:
        print("Usage: rubbish_restore [files] | [indexes]")
        return

    if len(rubbish.bin_contents()) == 0:
        print("Bin is empty!")
        return

    for file in files:
        if file[0] != "/" or not file.isnumeric():
            print("You must specify an absolute path or provide the id of the file(rubbish-list)")
            return

    isnumeric = True
    for file in files:
        if not file.isnumeric():
            isnumeric = False
            break

    restored = 0
    # If all args are numeric
    if isnumeric:
        restored = rubbish.restore_by_index(files)
    # If at least one is not
    else:
        restored = rubbish.restore_by_filename(files)

    print("Restored", restored, "out of", len(files), "files.")


if __name__ == "__main__":
    if len(sys.argv) == 1:
        print("Usage: rubbish put|restore|list [args]")
        sys.exit(1)
    cmd = sys.argv[1]
    func_args = sys.argv[2:]

    if cmd == "put":
        rubbish_put(func_args)
    elif cmd == "list":
        rubbish_list()
    elif cmd == "restore":
        rubbish_restore(func_args)
    else:
        print("Invalid command")
